#import */*.graphql

extend type Query {
    categories: [Category!]! @paginate(defaultCount: 10)
    category(id: ID @eq): Category @find

    randomCategory(total: Int!): [Category!]!
        @field(resolver: "CategoryQuery@getRandom")

    categoriesPage(page: Int!, size: Int!): CategoriesPage
        @field(resolver: "CategoryQuery@getPage")

    findCategoryBy(
        identifier: String!
        operator: String!
        value: String!
    ): Category! @field(resolver: "CategoryQuery@findBy")
}

type CategoriesPage {
    categories: [Category]
    hasMore: Boolean
}

extend type Mutation {
    createCategory(name: String, slug: String!, image: String): Category!
        @create

    updateCategory(
        id: ID!
        name: String
        slug: String!
        image: String
    ): Category @update

    upsertCategory(
        id: ID!
        name: String
        slug: String!
        image: String
    ): Category @upsert

    deleteCategory(id: ID!): Category @delete
}
# type

type Category {
    id: ID!
    name: String
    slug: String!
    image: String
    books: [Book] @hasMany

    created_at: DateTime!
    updated_at: DateTime!
}
