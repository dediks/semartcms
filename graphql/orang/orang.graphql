#import */*.graphql

extend type Query {    
    #sihgle data
    orang(id: ID @eq): Orang @find 

    #all data
    orangs: [Orang!]! @all

    #all data paginate
    orangsPaginate: [Orang!]! @paginate(defaultCount: 10) 

    #get most selected top data
    orangsTop(total: Int!, order_by: String!, director: String!): [Orang!]!
      @paginate(defaultCount: 10)

    #get somme randomized data
    orangGetRandom(total: Int!): [Orang!]! @field(resolver: "OrangQuery@getRandom")

    #get some data by paramaters
    orangFindBy(identifier: String!, operator: String!, value: String!): Orang!
      @field(resolver: "OrangQuery@findBy")

    #get all data with pagination
    orangsPage(page: Int!, size: Int!): OrangsPage
      @field(resolver: "OrangQuery@getPage")
    
    #search a data
    orangsSearch(col_name: String!, kw: String!): [Orang!]!
      @field(resolver: "OrangQuery@search")
}


type OrangsPage {
    orangs: [Orang]
    hasMore: Boolean
}

extend type Mutation {
    createOrang(
      	name:String

    ): Orang! @create
    
    updateOrang(
      id: ID!
      	name:String

      ): Orang @update

    upsertOrang(
      id: ID! 
      	name:String

      ): Orang @upsert

    deleteOrang(id: ID!): Orang @delete
}
# type 

type Orang {
    id: ID!
    	name:String
	phone: Phone@hasOne
	pesanans: [Pesanan] @hasMany

    created_at: DateTime!
    updated_at: DateTime!
}
